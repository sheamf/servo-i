  <script src="//maps.google.com/maps/api/js?v=3.13&amp;sensor=false&amp;libraries=geometry" type="text/javascript"></script>
  <script src='//google-maps-utility-library-v3.googlecode.com/svn/tags/markerclustererplus/2.0.14/src/markerclusterer_packed.js' type='text/javascript'></script>
  <script src='//google-maps-utility-library-v3.googlecode.com/svn/trunk/richmarker/src/richmarker-compiled.js' type='text/javascript'></script>
  <script src='//google-maps-utility-library-v3.googlecode.com/svn/tags/infobox/1.1.9/src/infobox_packed.js' type='text/javascript'></script>





<br>
<div id="directions">
  <form>
    <input type="text" id="startValueId" placeholder="Start"/>
    <input type="text" id="endValueId" placeholder="End"/>
    <!-- <input type="button" id="getDirections" value="Get Directions" onclick="calcRoute()"/> -->
    <input type="button" id="getDirections" value="Get Directions"/>
  </form>
<div style='width: 1400px;'>
  <div id="map" style='width: 1400px; height: 600px;'></div>
</div>
  <script type="text/javascript">
    // var geocoder;
    // var map;
    // function initialize() {
    //   geocoder = new google.maps.Geocoder();
    //   var latlng = new google.maps.LatLng(-34.397, 150.644);
    //   var mapOptions = {
    //     zoom: 8,
    //     center: latlng
    //   }
    //   // map = new google.maps.Map(document.getElementById("map-canvas"), mapOptions);
    // }

    // function codeAddress() {
      // var geocoder = new google.maps.Geocoder();
      // var startAddress = document.getElementById("startValueId").value;
      // var endAddress = document.getElementById("endValueId").value;
      // var startGeo = geocoder.geocode( { 'address': startAddress} );
      // var endGeo = geocoder.geocode( { 'address': endAddress} );
    // };




      // geocoder.geocode( { 'address': address}, function(results, status) {
        // if (status == google.maps.GeocoderStatus.OK) {
        //   map.setCenter(results[0].geometry.location);
        //   var marker = new google.maps.Marker({
        //       map: map,
        //       position: results[0].geometry.location
        //   });
      //   } else {
      //     alert("Geocode was not successful for the following reason: " + status);
      //   }
      // });
    // }
  </script>
<!-- <body onload="initialize()"> -->
<!-- <div onload="initialize()">
 <div id="map-canvas" style="width: 320px; height: 480px;"></div>
  <div>
    <input id="address" type="textbox" value="Sydney, NSW">
    <input type="button" value="Encode" onclick="codeAddress()">
  </div>
</div> -->
<!-- </body> -->
  <!--   <%# form_tag '' do %>
      <div><%#= text_field_tag "Start" %></div>
      <div><%#= text_field_tag "End" %></div>
      <div><%#= submit_tag 'Save' %></div>
    <%# end %> -->
</div>

<!-- <div>
  <%#= javascript_tag do %>
    startLat = 0
  <%# end %>
</div> -->

<!--<h1>Listing stations</h1>

<table class="table table-striped">
  <thead>
    <tr>
      <th>Name</th>
      <th>Full Address</th>
      <th>Operational</th>
      <th>Store number</th>
      <th>Cng price</th>
      <th>Deisel price</th>
      <th>Phone number</th>
      <th>Subscriber</th>
      <th>Email</th>
      <th>Website</th>
      <th>Certification</th>
      <th>Latitude</th>
      <th>Longitude</th>
      <th></th>
      <th></th>
      <th></th>
    </tr>
  </thead>

  <tbody>
    <%# @stations.each do |station| %>
      <tr>
        <td><%#= station.name %></td>
        <td><%#= station.full_address %></td>
        <td><%#= station.operational %></td>
        <td><%#= station.store_number %></td>
        <td><%#= station.cng_price %></td>
        <td><%#= station.deisel_price %></td>
        <td><%#= station.phone_number %></td>
        <td><%#= station.subscriber %></td>
        <td><%#= station.email %></td>
        <td><%#= station.website %></td>
        <td><%#= station.certification %></td>
        <td><%#= station.latitude %></td>
        <td><%#= station.longitude %></td>
        <td><%#= link_to 'Show', station %></td>
        <td><%#= link_to 'Edit', edit_station_path(station) %></td>
        <td><%#= link_to 'Destroy', station, method: :delete, data: { confirm: 'Are you sure?' } %></td>
      </tr>
    <%# end %>
  </tbody>
</table>-->

<br>

<%#= link_to 'New Station', new_station_path %>

<script type="text/javascript">
var handler = buildMap(<%=raw @hash.to_json %>);
// buildMap is calling buildMap in the coffeescript file, which is returning handler, which is set to handler here.  
// handler = Gmaps.build('Google');
// handler.buildMap({ provider: {}, internal: {id: 'map'}}, function(){
//   markers = handler.addMarkers(<%=raw @hash.to_json %>);
//   handler.bounds.extendWith(markers);
//   handler.fitMapToBounds();
// });

</script>



<script type="text/javascript">

  $(document).ready(function() {
    $('#getDirections').click(function() {
      // foo($('#getDirections').val());
      var start = $('#startValueId').val();
      var end = $('#endValueId').val();
      // var startLat = start.
      // console.log(start);
      // console.log(end);
      // var addresses = [];
      // addresses.push(start);
      // addresses.push(end);
      // codeAddress(addresses);
      codeAddress(start, end);
      });
  });


  function codeAddress(start, end) {
    //In this case it gets the address from an element on the page, but obviously you  could just pass it to the method instead
    // var address = document.getElementById("address").value;

    geocoder = new google.maps.Geocoder();

    // var startGeo = geocoder.geocode( { 'address': start} );
    // var endGeo = geocoder.geocode( { 'address': end} );

    // console.log(startGeo);
    // console.log(endGeo);

    // var latlong_both = [];

    // $.each(addresses, function(index, value) {
    //   var latlong = [];

      // var startGeo = geocoder.geocode( { 'address': start }, function(results, status) {
      geocoder.geocode( { 'address': start }, function(results, status) {
        if (status == google.maps.GeocoderStatus.OK) {
          //In this case it creates a marker, but you can get the lat and lng from the location.LatLng
          // map.setCenter(results[0].geometry.location);
          // var marker = new google.maps.Marker({
          //     map: map, 
          //     position: results[0].geometry.location
          // console.log(results[0].geometry.location);
          var startGeo = results[0].geometry.location
          // console.log(startGeo);
          geocoder.geocode( { 'address': end }, function(results, status) {
            if (status == google.maps.GeocoderStatus.OK) {
          
              // console.log(results[0].geometry.location);
              var endGeo = results[0].geometry.location
              // console.log(startGeo);
              // console.log(endGeo);
              // keys = Object.keys(startGeo);
              // console.log(endGeo["ob"]);
              // console.log(keys);
              calcRoute(startGeo, endGeo);
            } else {
              alert("Geocode was not successful for the following reason: " + status);
            }
          });
          // });
        } else {
          alert("Geocode was not successful for the following reason: " + status);
        }
      });
    // console.log(startGeo);
    // console.log(endGeo);
    // calcRoute(startGeo, endGeo);


    // })


  }


  // geocoder = new google.maps.Geocoder();

  // function codeAddress() {
  //   //In this case it gets the address from an element on the page, but obviously you  could just pass it to the method instead
  //   var address = document.getElementById("address").value;

  //   geocoder.geocode( { 'address': address}, function(results, status) {
  //     if (status == google.maps.GeocoderStatus.OK) {
  //       //In this case it creates a marker, but you can get the lat and lng from the location.LatLng
  //       map.setCenter(results[0].geometry.location);
  //       var marker = new google.maps.Marker({
  //           map: map, 
  //           position: results[0].geometry.location
  //       });
  //     } else {
  //       alert("Geocode was not successful for the following reason: " + status);
  //     }
  //   });
  // }
// $(document).ready(function() {
// function initialize() {
  // var directionsDisplay = new google.maps.DirectionsRenderer();
  // var directionsService = new google.maps.DirectionsService();
// // }

function calcRoute(start, end) {
  var directionsDisplay = new google.maps.DirectionsRenderer();
  var directionsService = new google.maps.DirectionsService();
  // var origin      = new google.maps.LatLng(42.331427, -83.0457538);
  // var destination = new google.maps.LatLng(29.4241219, -98.49362819999999);
  // console.log(start["pb"]);
  // console.log(end);
  var origin      = new google.maps.LatLng(start["ob"], start["pb"]);
  var destination = new google.maps.LatLng(end["ob"], end["pb"]);
  // var origin      = new google.maps.LatLng(42.331427, -83.0457538);
  // var destination = new google.maps.LatLng(29.4241219, -98.49362819999999);
//   var endGeo;
//   var geocoder = new google.maps.Geocoder();
//   var startAddress = document.getElementById("startValueId").value;
//   console.log(startAddress);
//   var endAddress = document.getElementById("endValueId").value;
//   console.log(endAddress);
//   var startGeo = geocoder.geocode( { 'address': startAddress}, function(results, status) {
//       if (status == google.maps.GeocoderStatus.OK) {
//         map.setCenter(results[0].geometry.location);
//         var marker = new google.maps.Marker({
//             map: map,
//             position: results[0].geometry.location
//         });
//           endGeo = geocoder.geocode( { 'address': endAddress}, function(results, status) {
//           if (status == google.maps.GeocoderStatus.OK) {
//             map.setCenter(results[0].geometry.location);
//             var marker = new google.maps.Marker({
//                 map: map,
//                 position: results[0].geometry.location
//             });
//               var origin = startGeo;
//               var destination = endGeo;
              // var handler = Gmaps.build('Google');
              // handler.buildMap({ internal: {id: 'map'}}, function(){
              directionsDisplay.setMap(handler.getMap());
              // });

              var request = {
                  origin:      origin, 
                  destination: destination,
                  // origin:      new google.maps.LatLng(start["ob"], start["pb"]),
                  // destination: new google.maps.LatLng(end["ob"], end["pb"]),
                  travelMode:  google.maps.TravelMode.DRIVING
              };
              directionsService.route(request, function(response, status) {
                if (status == google.maps.DirectionsStatus.OK) {
                  directionsDisplay.setDirections(response);
                }
              });

//           } else {
//             alert("Geocode was not successful for the following reason: " + status);
//           }
//           });
//       } else {
//         alert("Geocode was not successful for the following reason: " + status);
//       }
//     });
  // console.log(startGeo); //undefined
  
  // console.log(endGeo); //undefined


}

// calcRoute(); // call this anywhere you want

// var handler = Gmaps.build('Google');
// handler.buildMap({ internal: {id: 'map'}}, function(){
//   directionsDisplay.setMap(handler.getMap());
// });

// });
</script>


